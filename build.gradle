apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    apply from: file("${rootDir}/gradle/quality.gradle")

    group = 'core.framework'
    version = '4.3.2'
}

def mongoVersion = '3.2.2'
def elasticVersion = '2.2.0'
def rabbitVersion = '3.6.1'

project(':core-ng-api') {
    apply from: file("${rootDir}/gradle/lib.gradle")
}

project(':core-ng') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        provided(
                'redis.clients:jedis:2.8.0@jar',
                "org.elasticsearch:elasticsearch:${elasticVersion}",
                "org.mongodb:mongo-java-driver:${mongoVersion}",
                "com.rabbitmq:amqp-client:${rabbitVersion}"
        )
        compile(
                project(":core-ng-api"),
                'javax.inject:javax.inject:1',
                'org.javassist:javassist:3.20.0-GA',
                'org.slf4j:slf4j-api:1.7.12',
                'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.7.1',
                'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.1',
                'com.fasterxml.jackson.module:jackson-module-afterburner:2.7.1',
                'org.apache.httpcomponents:httpclient:4.5.1',
                'io.undertow:undertow-core:1.3.17.Final'
        )
        testCompile(
                'junit:junit:4.12',
                'org.mockito:mockito-core:1.10.19',
                'org.hsqldb:hsqldb:2.3.3'
        )
    }
}

project(':core-ng-test') {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        provided(
                "org.mongodb:mongo-java-driver:${mongoVersion}",
                'com.github.fakemongo:fongo:2.0.6',
                "com.rabbitmq:amqp-client:${rabbitVersion}",
                'org.hsqldb:hsqldb:2.3.3',
                "org.elasticsearch:elasticsearch:${elasticVersion}",
                'org.codehaus.groovy:groovy-all:2.4.4'  // for elasticsearch groovy script support
        )
        compile(
                project(":core-ng"),
                'junit:junit:4.12',
                'org.mockito:mockito-core:1.10.19'
        )
    }
}

configure(subprojects.findAll { it.name.startsWith('core-ng') }) {
    apply plugin: 'maven-publish'

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar {
                    classifier 'sources'
                }
            }
        }

        repositories {
            maven {
                // put following values in gradle.properties, e.g. systemProp.core-ng.repo.s3.url = s3://xxx
                url System.properties['core-ng.repo.s3.url']
                credentials(AwsCredentials) {
                    accessKey System.properties['core-ng.repo.s3.accessKey']
                    secretKey System.properties['core-ng.repo.s3.secretKey']
                }
            }
        }
    }
}

project(':log-processor') {
    apply from: file("${rootDir}/gradle/app.gradle")

    dependencies {
        compile(
                project(':core-ng'),
                "org.elasticsearch:elasticsearch:${elasticVersion}",
                "com.rabbitmq:amqp-client:${rabbitVersion}"
        )
        testCompile(
                project(':core-ng-test')
        )
        testRuntime(
                'org.codehaus.groovy:groovy-all:2.4.4',  // for elastic search script test
        )
    }
}

project(':benchmark') {
    dependencies {
        compile(
                project(':core-ng'),
                'org.openjdk.jmh:jmh-generator-annprocess:1.11.3'
        )
        runtime(
                'redis.clients:jedis:2.8.0@jar'
        )
    }
}

project(':demo-service') {
    apply from: file("${rootDir}/gradle/app.gradle")

    dependencies {
        compile(
                project(':core-ng'),
                'redis.clients:jedis:2.8.0@jar'
        )
        runtime(
                "com.rabbitmq:amqp-client:${rabbitVersion}"
        )
        testCompile(
                project(':core-ng-test')
        )
    }
}

project(':mongo-perf-test') {
    apply from: file("${rootDir}/gradle/app.gradle")

    dependencies {
        compile(
                project(':core-ng'),
                'redis.clients:jedis:2.8.0@jar',
                "org.mongodb:mongo-java-driver:${mongoVersion}"
        )
        runtime(
                "com.rabbitmq:amqp-client:${rabbitVersion}"
        )
        testCompile(
                project(':core-ng-test')
        )
    }
}

project(':demo-site') {
    apply from: file("${rootDir}/gradle/app.gradle")

    dependencies {
        compile(
                project(':core-ng')
        )
        runtime(
                "com.rabbitmq:amqp-client:${rabbitVersion}"
        )
        testCompile(
                project(':core-ng-test')
        )
    }
}